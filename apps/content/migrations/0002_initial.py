# Generated by Django 4.2.23 on 2025-07-04 07:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("producers", "0001_initial"),
        ("content", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="post",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authored_posts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Author",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="posts",
                to="content.category",
                verbose_name="Categories",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="hashtags",
            field=models.ManyToManyField(
                blank=True,
                related_name="posts",
                to="content.hashtag",
                verbose_name="Hashtags",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="posts",
                to="producers.organization",
                verbose_name="Organization",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="subcategories",
            field=models.ManyToManyField(
                blank=True,
                related_name="posts",
                to="content.subcategory",
                verbose_name="Sub Categories",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="subsidiary",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="posts",
                to="producers.subsidiary",
                verbose_name="Subsidiary",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="posts",
                to="content.posttype",
                verbose_name="Post Type",
            ),
        ),
        migrations.AddIndex(
            model_name="hashtag",
            index=models.Index(fields=["slug"], name="content_has_slug_44db05_idx"),
        ),
        migrations.AddIndex(
            model_name="hashtag",
            index=models.Index(
                fields=["post_count"], name="content_has_post_co_46b3a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hashtag",
            index=models.Index(
                fields=["is_trending"], name="content_has_is_tren_243965_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hashtag",
            index=models.Index(
                fields=["last_used"], name="content_has_last_us_d3e2b4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hashtag",
            index=models.Index(
                fields=["is_active", "post_count"],
                name="content_has_is_acti_0ae77b_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="hashtag",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("name",),
                name="unique_hashtag_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="hashtag",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("slug",),
                name="unique_hashtag_slug",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["slug"], name="content_cat_slug_d6cc3e_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["is_active", "order"], name="content_cat_is_acti_506832_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["post_count"], name="content_cat_post_co_94eb1d_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("name",),
                name="unique_category_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("name_ar",),
                name="unique_category_name_ar",
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("slug",),
                name="unique_category_slug",
            ),
        ),
        migrations.AddField(
            model_name="bookmarkcollectionitem",
            name="bookmark",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="collection_items",
                to="content.bookmark",
                verbose_name="Bookmark",
            ),
        ),
        migrations.AddField(
            model_name="bookmarkcollectionitem",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="collection_items",
                to="content.bookmarkcollection",
                verbose_name="Collection",
            ),
        ),
        migrations.AddField(
            model_name="bookmarkcollection",
            name="bookmarks",
            field=models.ManyToManyField(
                blank=True,
                related_name="collections",
                through="content.BookmarkCollectionItem",
                to="content.bookmark",
                verbose_name="Bookmarks",
            ),
        ),
        migrations.AddField(
            model_name="bookmarkcollection",
            name="user",
            field=models.ForeignKey(
                help_text="User who owns the collection",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookmark_collections",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="bookmark",
            name="post",
            field=models.ForeignKey(
                help_text="Bookmarked post",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookmarks",
                to="content.post",
                verbose_name="Post",
            ),
        ),
        migrations.AddField(
            model_name="bookmark",
            name="user",
            field=models.ForeignKey(
                help_text="User who bookmarked the content",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookmarks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddIndex(
            model_name="subcategory",
            index=models.Index(
                fields=["category", "slug"], name="content_sub_categor_6e0713_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subcategory",
            index=models.Index(
                fields=["is_active", "order"], name="content_sub_is_acti_4b7fd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subcategory",
            index=models.Index(
                fields=["post_count"], name="content_sub_post_co_d6391c_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="subcategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("category", "name"),
                name="unique_subcategory_name_per_category",
            ),
        ),
        migrations.AddConstraint(
            model_name="subcategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("category", "slug"),
                name="unique_subcategory_slug_per_category",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="postsubcategory",
            unique_together={("post", "subcategory")},
        ),
        migrations.AlterUniqueTogether(
            name="posthashtag",
            unique_together={("post", "hashtag")},
        ),
        migrations.AlterUniqueTogether(
            name="postcategory",
            unique_together={("post", "category")},
        ),
        migrations.AddIndex(
            model_name="postattachment",
            index=models.Index(
                fields=["file_type"], name="content_pos_file_ty_ff8780_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="postattachment",
            index=models.Index(
                fields=["created_at"], name="content_pos_created_1fb672_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(fields=["status"], name="content_pos_status_94dfa7_idx"),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["created_at"], name="content_pos_created_1233b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["published_at"], name="content_pos_publish_f3c17c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(fields=["slug"], name="content_pos_slug_a791ce_idx"),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["view_count"], name="content_pos_view_co_d80f54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkcollectionitem",
            index=models.Index(
                fields=["collection", "order"], name="content_boo_collect_a56813_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkcollectionitem",
            index=models.Index(
                fields=["added_at"], name="content_boo_added_a_391036_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bookmarkcollectionitem",
            unique_together={("collection", "bookmark")},
        ),
        migrations.AddIndex(
            model_name="bookmarkcollection",
            index=models.Index(
                fields=["user", "name"], name="content_boo_user_id_4a87bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkcollection",
            index=models.Index(
                fields=["is_public"], name="content_boo_is_publ_c232d4_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmarkcollection",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("user", "name"),
                name="unique_user_collection_name",
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["user", "created_at"], name="content_boo_user_id_49afdb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["post", "created_at"], name="content_boo_post_id_9553c9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["is_private"], name="content_boo_is_priv_c8c7d5_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmark",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_deleted", False)),
                fields=("user", "post"),
                name="unique_user_post_bookmark",
            ),
        ),
    ]
